// Code generated by entc, DO NOT EDIT.

package word

const (
	// Label holds the string label denoting the word type in the database.
	Label = "word"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldMeaning holds the string denoting the meaning field in the database.
	FieldMeaning = "meaning"
	// FieldSentence holds the string denoting the sentence field in the database.
	FieldSentence = "sentence"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldStart holds the string denoting the start field in the database.
	FieldStart = "start"
	// FieldEnd holds the string denoting the end field in the database.
	FieldEnd = "end"
	// EdgeMovie holds the string denoting the movie edge name in mutations.
	EdgeMovie = "movie"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// Table holds the table name of the word in the database.
	Table = "words"
	// MovieTable is the table that holds the movie relation/edge.
	MovieTable = "words"
	// MovieInverseTable is the table name for the Movie entity.
	// It exists in this package in order to avoid circular dependency with the "movie" package.
	MovieInverseTable = "movies"
	// MovieColumn is the table column denoting the movie relation/edge.
	MovieColumn = "word_movie"
	// UserTable is the table that holds the user relation/edge.
	UserTable = "words"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_favorite_words"
)

// Columns holds all SQL columns for word fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldMeaning,
	FieldSentence,
	FieldDuration,
	FieldStart,
	FieldEnd,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "words"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"user_favorite_words",
	"word_movie",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
)
