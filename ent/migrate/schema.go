// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// MoviesColumns holds the columns for the "movies" table.
	MoviesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "year", Type: field.TypeString},
		{Name: "image_url", Type: field.TypeString},
		{Name: "runtime_str", Type: field.TypeString},
		{Name: "genres", Type: field.TypeString},
		{Name: "im_db_rating", Type: field.TypeString},
		{Name: "plot", Type: field.TypeString},
		{Name: "stars", Type: field.TypeString},
		{Name: "metacritic_rating", Type: field.TypeString},
	}
	// MoviesTable holds the schema information for the "movies" table.
	MoviesTable = &schema.Table{
		Name:       "movies",
		Columns:    MoviesColumns,
		PrimaryKey: []*schema.Column{MoviesColumns[0]},
	}
	// SearchKeywordsColumns holds the columns for the "search_keywords" table.
	SearchKeywordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString, Unique: true},
		{Name: "rate", Type: field.TypeUint16, Default: 0},
	}
	// SearchKeywordsTable holds the schema information for the "search_keywords" table.
	SearchKeywordsTable = &schema.Table{
		Name:       "search_keywords",
		Columns:    SearchKeywordsColumns,
		PrimaryKey: []*schema.Column{SearchKeywordsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "full_name", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "created_date", Type: field.TypeTime},
		{Name: "updated_date", Type: field.TypeTime},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// WordsColumns holds the columns for the "words" table.
	WordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "meaning", Type: field.TypeString, Nullable: true},
		{Name: "sentence", Type: field.TypeString, Nullable: true},
		{Name: "duration", Type: field.TypeString, Nullable: true},
	}
	// WordsTable holds the schema information for the "words" table.
	WordsTable = &schema.Table{
		Name:       "words",
		Columns:    WordsColumns,
		PrimaryKey: []*schema.Column{WordsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		MoviesTable,
		SearchKeywordsTable,
		UsersTable,
		WordsTable,
	}
)

func init() {
}
